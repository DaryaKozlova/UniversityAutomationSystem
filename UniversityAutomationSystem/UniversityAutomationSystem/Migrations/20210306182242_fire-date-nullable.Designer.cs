// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityAutomationSystem.DataAccess;

namespace UniversityAutomationSystem.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210306182242_fire-date-nullable")]
    partial class firedatenullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.AcademicPerformance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssessmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentTypeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("AcademicPerformance");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Administrator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CredentialsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CredentialsId");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.AssessmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssessmentType");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Credentials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.DeansOfficeWorker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CredentialsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CredentialsId");

                    b.ToTable("DeansOfficeWorker");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.FacultyDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacultyDepartment");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SpecialtyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.PassingHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademicPerformanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<bool>("IsPassed")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("PassingDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("AcademicPerformanceId");

                    b.ToTable("PassingHistory");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Specialty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Specialty");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CredentialsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EnteringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CredentialsId");

                    b.HasIndex("GroupId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.SubjectTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LabHours")
                        .HasColumnType("int");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LectureHours")
                        .HasColumnType("int");

                    b.Property<int>("PracticalHours")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<int>("SeminarHours")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TeacherTypeId");

                    b.ToTable("SubjectTeacher");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CredentialsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FacultyDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FireDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HireDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CredentialsId");

                    b.HasIndex("FacultyDepartmentId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.TeacherType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeacherType");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.AcademicPerformance", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.AssessmentType", "AssessmentType")
                        .WithMany()
                        .HasForeignKey("AssessmentTypeId");

                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("AssessmentType");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Administrator", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Credentials", "Credentials")
                        .WithMany()
                        .HasForeignKey("CredentialsId");

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.DeansOfficeWorker", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Credentials", "Credentials")
                        .WithMany()
                        .HasForeignKey("CredentialsId");

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Group", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("SpecialtyId");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.PassingHistory", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.AcademicPerformance", "AcademicPerformance")
                        .WithMany()
                        .HasForeignKey("AcademicPerformanceId");

                    b.Navigation("AcademicPerformance");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Specialty", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.FacultyDepartment", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Student", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Credentials", "Credentials")
                        .WithMany()
                        .HasForeignKey("CredentialsId");

                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Credentials");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.SubjectTeacher", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.TeacherType", "TeacherType")
                        .WithMany()
                        .HasForeignKey("TeacherTypeId");

                    b.Navigation("Language");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");

                    b.Navigation("TeacherType");
                });

            modelBuilder.Entity("UniversityAutomationSystem.DataAccess.Models.Teacher", b =>
                {
                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.Credentials", "Credentials")
                        .WithMany()
                        .HasForeignKey("CredentialsId");

                    b.HasOne("UniversityAutomationSystem.DataAccess.Models.FacultyDepartment", "FacultyDepartment")
                        .WithMany()
                        .HasForeignKey("FacultyDepartmentId");

                    b.Navigation("Credentials");

                    b.Navigation("FacultyDepartment");
                });
#pragma warning restore 612, 618
        }
    }
}
